name: Deploy KAFKA

on:
  workflow_dispatch:
    inputs:
      restart:
        description: "KAFKAÎ•º Ïû¨ÏãúÏûëÌï†ÍπåÏöî?"
        required: false
        default: "false"
        type: choice
        options:
          - "false"
          - "true"
jobs:
  deploy:
    runs-on: ubuntu-latest
    steps:
      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v1
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: ${{ secrets.AWS_REGION }}

      - name: Login to ECR
        id: login-ecr
        uses: aws-actions/amazon-ecr-login@v1
      
      - name: Set environment variables from SSM
        run: |
          load_param() {
            VALUE=$(aws ssm get-parameter --name "$1" --with-decryption --query "Parameter.Value" --output text)
            echo "::add-mask::$VALUE"
            echo "$2=$VALUE" >> $GITHUB_ENV
          }

          load_secret_to_file() {
            VALUE=$(aws ssm get-parameter --name "$1" --with-decryption --output json | jq -r .Parameter.Value)

            echo "$VALUE" | while IFS= read -r line; do
              echo "::add-mask::$line"
            done

            echo "$VALUE" > "$2"
          }
          BRANCH="develop"  # Í∞úÎ∞ú ÌôòÍ≤ΩÏùÑ ÏúÑÌïú Î∏åÎûúÏπò ÏÑ§Ï†ï
          SANITIZED_BRANCH="${BRANCH//\//-}"
          SANITIZED_BRANCH=$(echo "$SANITIZED_BRANCH" | sed 's#[^a-zA-Z0-9_.-]#-#g')
          BRANCH="$SANITIZED_BRANCH"
          echo "BRANCH=$BRANCH" >> $GITHUB_ENV
          echo "ENV=develop" >> $GITHUB_ENV
          load_param "/global/gcp/kafka/HOST" HOST
          load_param "/global/gcp/kafka/INSTANCE" INSTANCE
          load_param "/global/gcp/kafka/PROJECT_ID" PROJECT_ID
          load_param "/global/gcp/kafka/ZONE" ZONE
          load_secret_to_file "/global/gcp/kafka/SA_KEY" gcp-sa-key.json
          echo "SA_KEY<<EOF" >> $GITHUB_ENV
          cat gcp-sa-key.json >> $GITHUB_ENV
          echo "EOF" >> $GITHUB_ENV


      - name: Setup gcloud CLI
        uses: google-github-actions/setup-gcloud@v1

      - name: Boot target instance (start/resume with conditional wait)
        run: |
          echo "‚ö° Ïù∏Ïä§ÌÑ¥Ïä§ ÏÉÅÌÉú ÌôïÏù∏ Ï§ë: $INSTANCE (zone: $ZONE)"
          STATUS=$(gcloud compute instances describe "$INSTANCE" --zone="$ZONE" --format='get(status)')
          echo "üîé ÌòÑÏû¨ ÏÉÅÌÉú: $STATUS"

          if [[ "$STATUS" == "SUSPENDED" ]]; then
            echo "üîÑ 'resume' Î™ÖÎ†π Ïã§Ìñâ"
            gcloud compute instances resume "$INSTANCE" --zone="$ZONE"
            echo "‚è≥ ÏÉÅÌÉú Î≥ÄÍ≤Ω ÌõÑ 30Ï¥à ÎåÄÍ∏∞..."
            sleep 30
          elif [[ "$STATUS" == "TERMINATED" ]]; then
            echo "üîÑ 'start' Î™ÖÎ†π Ïã§Ìñâ"
            gcloud compute instances start "$INSTANCE" --zone="$ZONE"
            echo "‚è≥ ÏÉÅÌÉú Î≥ÄÍ≤Ω ÌõÑ 30Ï¥à ÎåÄÍ∏∞..."
            sleep 30
          else
            if [[ "${{ inputs.restart }}" == "true" ]]; then
                echo "üîÑ 'stop' Î™ÖÎ†π Ïã§Ìñâ"
                gcloud compute instances stop "$INSTANCE" --zone="$ZONE"
                echo "‚è≥ ÏÉÅÌÉú Î≥ÄÍ≤Ω ÌõÑ 30Ï¥à ÎåÄÍ∏∞..."
                sleep 60
                echo "üîÑ 'start' Î™ÖÎ†π Ïã§Ìñâ"
                gcloud compute instances start "$INSTANCE" --zone="$ZONE"
                echo "‚è≥ ÏÉÅÌÉú Î≥ÄÍ≤Ω ÌõÑ 30Ï¥à ÎåÄÍ∏∞..."
                sleep 30
                fi
            echo "‚úÖ Ïù¥ÎØ∏ Ïã§Ìñâ Ï§ë - ÎåÄÍ∏∞ ÏÉùÎûµ"
          fi

      - name: Wait for KAFKA to be ready
        run: |
          echo "üïí Spring Boot ÏÑúÎ≤Ñ Í∏∞Îèô ÎåÄÍ∏∞ Ï§ë..."
          sleep 30

      - name: Send success notification
        if: success()
        run: |
          curl -H "Content-Type: application/json" \
               -X POST \
               -d "{\"content\": \"${{ env.DEPLOY_MESSAGE }}\\n> Branch: \`${{ env.BRANCH }}\`\\n> Commit: ${{ env.COMMIT_HASH }}\"}" \
               ${{ secrets.DISCORD_WEBHOOK_CICD_URL }}

      - name: Send failure notification
        if: failure()
        run: |
          WORKFLOW_URL="https://github.com/${{ github.repository }}/actions/runs/${{ github.run_id }}"
          curl -H "Content-Type: application/json" \
               -X POST \
               -d "{\"content\": \"‚ùå **[${{ env.ENV }} ÌôòÍ≤Ω]** BE Î∞∞Ìè¨ Ïã§Ìå®\\n> Branch: \`${{ env.BRANCH }}\`\\n> Commit: ${{ env.COMMIT_HASH }}\\n> [ÏõåÌÅ¨ÌîåÎ°úÏö∞ Î°úÍ∑∏ Î≥¥Í∏∞]($WORKFLOW_URL)\"}" \
               ${{ secrets.DISCORD_WEBHOOK_CICD_URL }}
