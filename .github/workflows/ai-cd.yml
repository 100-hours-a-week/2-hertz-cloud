name: AI Backend CD (SSH)

on:
  workflow_dispatch:
    inputs:
      rollback:
        description: '롤백 배포를 수행할까요?'
        required: false
        default: 'false'
        type: choice
        options:
          - 'false'
          - 'true'

env:
  PROJECT_ID: ${{ secrets.GCP_PROJECT_ID }}
  ZONE: ${{ secrets.GCP_ZONE }}
  INSTANCE: ${{ secrets.GCP_AI_INSTANCE }}
  HOST: ${{ secrets.GCP_AI_SERVER_HOST }}
  GCP_SA_KEY: ${{ secrets.GCP_SA_KEY }}

jobs:
  deploy:
    runs-on: ubuntu-latest

    steps:
      - name: Set environment
        run: |
          BRANCH="${{ github.ref_name }}"
          echo "BRANCH=$BRANCH" >> $GITHUB_ENV
          echo "ENV=production" >> $GITHUB_ENV
          echo "ROLLBACK=${{ github.event.inputs.rollback }}" >> $GITHUB_ENV
          echo "COMMIT_HASH=${{ github.sha }}" >> $GITHUB_ENV

      - name: Set deploy message
        run: |
          if [[ "${{ github.event.inputs.rollback }}" == "true" ]]; then
            echo "DEPLOY_MESSAGE=🚨 [AI 롤백 배포 완료]" >> $GITHUB_ENV
          else
            echo "DEPLOY_MESSAGE=🤖 [AI 배포 완료]" >> $GITHUB_ENV
          fi

      - name: Authenticate to GCP
        uses: google-github-actions/auth@v1
        with:
          credentials_json: ${{ secrets.GCP_AI_SA_KEY }}

      - name: Setup gcloud CLI
        uses: google-github-actions/setup-gcloud@v1

      - name: Boot target instance (start/resume with conditional wait)
        run: |
          echo "⚡ 인스턴스 상태 확인 중: $INSTANCE (zone: $ZONE)"
          STATUS=$(gcloud compute instances describe "$INSTANCE" --zone="$ZONE" --format='get(status)')
          echo "🔎 현재 상태: $STATUS"

          if [[ "$STATUS" == "SUSPENDED" ]]; then
            echo "🔄 'resume' 명령 실행"
            gcloud compute instances resume "$INSTANCE" --zone="$ZONE"
            echo "⏳ 상태 변경 후 30초 대기..."
            sleep 30
          elif [[ "$STATUS" == "TERMINATED" ]]; then
            echo "🔄 'start' 명령 실행"
            gcloud compute instances start "$INSTANCE" --zone="$ZONE"
            echo "⏳ 상태 변경 후 30초 대기..."
            sleep 30
          else
            echo "✅ 이미 실행 중 - 대기 생략"
          fi

      - name: Deploy via SSH
        uses: appleboy/ssh-action@master
        with:
          host: ${{ env.HOST }}
          username: ${{ secrets.SSH_USERNAME }}
          key: ${{ secrets.SSH_PRIVATE_KEY }}
          script: |
            cd /home/deploy
            chmod +x ai_deploy.sh
            if [[ "${{ env.ROLLBACK }}" == "true" ]]; then
              ./ai_deploy.sh --rollback
            else
              ./ai_deploy.sh
            fi

      - name: Wait for FastAPI to start
        run: |
          echo "🕒 FastAPI 서버 기동 대기 중..."
          sleep 15

      - name: Health check AI server
        run: |
            echo "🔍 AI 서버 헬스체크 시작 (FastAPI Swagger docs)... 최대 3회 시도합니다."
            for i in {1..3}; do
              echo "⏱️ 시도 $i: http://${{ env.HOST }}:8000/docs"
              if curl -sf http://${{ env.HOST }}:8000/docs; then
                echo "✅ 헬스체크 성공 🎉"
                exit 0
              else
                echo "⚠️ 헬스체크 실패. 15초 후 재시도..."
                sleep 15
              fi
            done
        
            echo "❌ 3회 헬스체크 실패 - AI 서버가 정상 기동되지 않음"
            exit 1

      - name: Send notification
        if: success()
        run: |
          curl -H "Content-Type: application/json" \
               -X POST \
               -d "{\"content\": \"${{ env.DEPLOY_MESSAGE }} **${{ env.ENV }}** AI 서버 (브랜치: \`${{ env.BRANCH }}\`)\\n🔖 Commit: ${{ env.COMMIT_HASH }}\"}" \
               ${{ secrets.DISCORD_WEBHOOK_CICD_URL }}
