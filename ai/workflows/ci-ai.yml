# .github/workflows/fastapi-ai-ci.yml

name: AI CI


on:
  pull_request:
   types: [closed] # PR이 닫혔을 때 (병합 포함)
     branches:
       - main # main 브랜치로 Merge 시 -> Production 환경에 배포
       - develop # develop 브랜치로 Merge 시 -> DEV 환경에 배포
jobs:
  ai-ci:
    runs-on: ubuntu-latest

    steps:
    # 1. 소스 코드 체크아웃
    - name: Checkout repository
      uses: actions/checkout@v3
      with:
        fetch-depth: 1

    # 2. Python 3.10 설치 및 캐시 설정
    - name: Set up Python
      uses: actions/setup-python@v4
      with:
        python-version: '3.10'
        cache: 'pip'
        cache-dependency-path: |
          requirements.txt
         

    # 3. 가상환경 생성 및 활성화
    - name: Create and activate virtual environment
      run: |
        python -m venv venv
        source venv/bin/activate

    # 4. 의존성 설치 (병렬 처리 및 캐시 활용)
    - name: Install dependencies
      run: |
        pip install --upgrade pip setuptools wheel
        # requirements.txt 설치 (없으면 건너뜀)
        pip install -r requirements.txt || echo "📦 requirements.txt 없음, 건너뜀"
        # 기본 의존성 설치 (한 번에 설치)
        pip install uvicorn

    - name: Launch FastAPI server in background
      run: |
        nohup uvicorn app.main:app --host 127.0.0.1 --port 8000 > uvicorn.log 2>&1 &
        sleep 5  # 서버 기동 대기

    - name: Health check
      run: |
        curl -f http://127.0.0.1:8000/docs || (cat uvicorn.log && exit 1)

    # 5. Discord 알림
    - name: Send success notification
      if: success()
      run: |
        curl -H "Content-Type: application/json" \
             -X POST \
             -d "{\"username\": \"AI CI\", \"content\": \"✅ [AI CI 성공] **${{ github.base_ref }}** AI 서버 (브랜치: \`${{ github.head_ref }}\`)\\n🔖 Commit: ${{ github.sha }}\"}" \
             ${{ secrets.DISCORD_WEBHOOK_URL }}

    - name: Send failure notification
      if: failure()
      run: |
        WORKFLOW_URL="https://github.com/${{ github.repository }}/actions/runs/${{ github.run_id }}"
        curl -H "Content-Type: application/json" \
             -X POST \
             -d "{\"username\": \"AI CI\", \"content\": \"❌ [AI CI 실패] **${{ github.base_ref }}** AI 서버 (브랜치: \`${{ github.head_ref }}\`)\\n🔖 Commit: ${{ github.sha }}\\n⚠️ [워크플로우 로그 보기]($WORKFLOW_URL)\"}" \
             ${{ secrets.DISCORD_WEBHOOK_URL }}
