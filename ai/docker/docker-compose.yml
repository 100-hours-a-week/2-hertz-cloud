version: "3.8"

services:
  tuning-api:
    container_name: tuning
    image: ${AWS_ACCOUNT_ID}.dkr.ecr.${AWS_REGION}.amazonaws.com/tuning-api:${IMAGE_TAG:-latest}

    restart: always
    ports:
      - "8000:8000"
    cap_add:
      - SYS_PTRACE
    environment:
      - UVICORN_WORKERS=1
      - CHROMA_HOST=host.docker.internal  # ⬅️ 로컬 PM2 서버로 접속
      - CHROMA_PORT=8001
      - CHROMA_MODE=server
      - TOKENIZERS_PARALLELISM=false
    volumes:
      - tuning_logs:/app/logs
      - ./app-tuning:/app/app
    depends_on: []
    deploy:
      resources:
        limits:
          cpus: "3.0"
          memory: "11G"
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8000/api/v1/health/chromadb"]
      interval: 30s
      timeout: 10s
      retries: 5
      start_period: 60s
    extra_hosts:
      - "host.docker.internal:172.17.0.1"  # ⬅️ Linux 호스트 연결을 위한 강제 호스트 설정


volumes:
  tuning_logs:

#  chromadb:
#    container_name: chromadb
#    build:
#      context: .
#     dockerfile: Dockerfile.DB
#    volumes:
#      - chroma-data:/chroma/db
#    ports:
#      - "8001:8001"
#    environment:
#      - ALLOW_RESET=${ALLOW_RESET:-false}
#      - ANONYMIZED_TELEMETRY=false
#      - PERSIST_DIRECTORY=/chroma/db
#    restart: unless-stopped
#    networks:
#      - app-network
#
#networks:
#  app-network:
#    driver: bridge
#
#volumes:
#  chroma-data:
#    driver: local
#  tuning_logs:
