apiVersion: batch/v1
kind: Job
metadata:
  name: install-prometheus-crds
  namespace: {{ .Values.global.namespace }}
  annotations:
    argocd.argoproj.io/sync-wave: "0"
    argocd.argoproj.io/hook: PreSync
spec:
  template:
    spec:
      serviceAccountName: prometheus-crd-installer
      restartPolicy: OnFailure
      containers:
      - name: crd-installer
        image: bitnami/kubectl:latest
        command:
        - /bin/bash
        - -c
        - |
          echo "Removing existing Prometheus CRDs..."
          kubectl delete crd prometheuses.monitoring.coreos.com --ignore-not-found=true
          kubectl delete crd prometheusrules.monitoring.coreos.com --ignore-not-found=true
          kubectl delete crd servicemonitors.monitoring.coreos.com --ignore-not-found=true
          kubectl delete crd podmonitors.monitoring.coreos.com --ignore-not-found=true
          kubectl delete crd alertmanagers.monitoring.coreos.com --ignore-not-found=true
          kubectl delete crd alertmanagerconfigs.monitoring.coreos.com --ignore-not-found=true
          kubectl delete crd probes.monitoring.coreos.com --ignore-not-found=true
          kubectl delete crd thanosrulers.monitoring.coreos.com --ignore-not-found=true
          
          echo "Installing Prometheus Operator CRDs..."
          kubectl apply --server-side=true -f https://raw.githubusercontent.com/prometheus-operator/prometheus-operator/v0.68.0/example/prometheus-operator-crd/monitoring.coreos.com_alertmanagerconfigs.yaml
          kubectl apply --server-side=true -f https://raw.githubusercontent.com/prometheus-operator/prometheus-operator/v0.68.0/example/prometheus-operator-crd/monitoring.coreos.com_alertmanagers.yaml
          kubectl apply --server-side=true -f https://raw.githubusercontent.com/prometheus-operator/prometheus-operator/v0.68.0/example/prometheus-operator-crd/monitoring.coreos.com_podmonitors.yaml
          kubectl apply --server-side=true -f https://raw.githubusercontent.com/prometheus-operator/prometheus-operator/v0.68.0/example/prometheus-operator-crd/monitoring.coreos.com_probes.yaml
          kubectl apply --server-side=true -f https://raw.githubusercontent.com/prometheus-operator/prometheus-operator/v0.68.0/example/prometheus-operator-crd/monitoring.coreos.com_prometheuses.yaml
          kubectl apply --server-side=true -f https://raw.githubusercontent.com/prometheus-operator/prometheus-operator/v0.68.0/example/prometheus-operator-crd/monitoring.coreos.com_prometheusrules.yaml
          kubectl apply --server-side=true -f https://raw.githubusercontent.com/prometheus-operator/prometheus-operator/v0.68.0/example/prometheus-operator-crd/monitoring.coreos.com_servicemonitors.yaml
          kubectl apply --server-side=true -f https://raw.githubusercontent.com/prometheus-operator/prometheus-operator/v0.68.0/example/prometheus-operator-crd/monitoring.coreos.com_thanosrulers.yaml
          echo "CRDs installed successfully!"
---
apiVersion: v1
kind: ServiceAccount
metadata:
  name: prometheus-crd-installer
  namespace: {{ .Values.global.namespace }}
  annotations:
    argocd.argoproj.io/sync-wave: "0"
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  name: prometheus-crd-installer
  annotations:
    argocd.argoproj.io/sync-wave: "0"
rules:
- apiGroups: ["apiextensions.k8s.io"]
  resources: ["customresourcedefinitions"]
  verbs: ["get", "list", "create", "update", "patch", "delete"]
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  name: prometheus-crd-installer
  annotations:
    argocd.argoproj.io/sync-wave: "0"
subjects:
- kind: ServiceAccount
  name: prometheus-crd-installer
  namespace: {{ .Values.global.namespace }}
roleRef:
  kind: ClusterRole
  name: prometheus-crd-installer
  apiGroup: rbac.authorization.k8s.io