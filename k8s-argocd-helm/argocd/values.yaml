# ArgoCD Helm Chart Values for EKS (Port-forward access)

## ArgoCD Server
server:
  # ArgoCD 서버 설정 (ALB용)
  extraArgs:
    - --insecure  # ALB에서 TLS 종료하므로 insecure 모드
  # Service Account with IRSA for ECR access
  serviceAccount:
    create: true
    name: argocd-server-sa
    annotations:
      eks.amazonaws.com/role-arn: "arn:aws:iam::969400486509:role/argocd-ecr-access-role"
  
  # LoadBalancer 서비스 설정 (ALB with HTTPS redirect)
  service:
    type: LoadBalancer
    annotations:
      service.beta.kubernetes.io/aws-load-balancer-type: "alb"
      service.beta.kubernetes.io/aws-load-balancer-scheme: "internet-facing"
      service.beta.kubernetes.io/aws-load-balancer-listen-ports: '[{"HTTP":80},{"HTTPS":443}]'
      service.beta.kubernetes.io/aws-load-balancer-ssl-cert: "arn:aws:acm:ap-northeast-2:969400486509:certificate/0923e90f-18b8-4f6c-b33f-878e9d00cfbf"
      service.beta.kubernetes.io/aws-load-balancer-ssl-redirect: "443"
      service.beta.kubernetes.io/aws-load-balancer-backend-protocol: "HTTPS"
  
  # Resources
  resources:
    requests:
      cpu: 300m
      memory: 256Mi
    limits:
      cpu: 500m
      memory: 512Mi

## Repository Server
repoServer:
  # Service Account with IRSA for ECR access
  serviceAccount:
    create: true
    name: argocd-repo-server-sa
    annotations:
      eks.amazonaws.com/role-arn: "arn:aws:iam::969400486509:role/argocd-ecr-access-role"
  
  resources:
    requests:
      cpu: 300m
      memory: 256Mi
    limits:
      cpu: 500m
      memory: 512Mi

## Application Controller
controller:
  # Service Account with IRSA for ECR access
  serviceAccount:
    create: true
    name: argocd-application-controller-sa
    annotations:
      eks.amazonaws.com/role-arn: "arn:aws:iam::969400486509:role/argocd-ecr-access-role"
  
  resources:
    requests:
      cpu: 500m
      memory: 512Mi
    limits:
      cpu: 1000m
      memory: 1Gi

## Configs
configs:
  # Repository credentials for ECR
  credentialTemplates:
    ecr-creds:
      url: 969400486509.dkr.ecr.ap-northeast-2.amazonaws.com
      username: AWS
      password: |
        aws ecr get-login-password --region ap-northeast-2

## Image Updater
imageUpdater:
  enabled: true
  serviceAccount:
    create: true
    annotations:
      eks.amazonaws.com/role-arn: "arn:aws:iam::969400486509:role/argocd-ecr-access-role"
  config:
    registries:
      - name: ecr
        api_url: https://969400486509.dkr.ecr.ap-northeast-2.amazonaws.com
        prefix: 969400486509.dkr.ecr.ap-northeast-2.amazonaws.com
        ping: yes
        credentials: ext:/scripts/auth1.sh
        credsexpire: 10h
  authScripts:
    enabled: true
    scripts:
      auth1.sh: |
        #!/bin/sh
        aws ecr get-login-password --region ap-northeast-2